{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Mult","props","state","score","num1","Math","floor","random","num2","result","Component","SimpMult","updateResult","e","setState","target","value","updateTask","document","getElementById","focus","checkResult","parseInt","enterListener","keyCode","click","this","onKeyUp","id","onChange","onClick","DivRemainder","updateRemainder","remainder","first","second","AddSub","getSign","addition","add","ParentView","changeTask","currentTask","tasks","App","className","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc118192.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass Mult extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      num1: Math.floor(Math.random() * 500) + 10,\n      num2: Math.floor(Math.random() * 500) + 10,\n      result: -1,\n    }\n  }\n  render() {\n    return (\n        <div>\n\n        </div>\n    );\n  }\n}\n\nclass SimpMult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      num1: Math.floor(Math.random() * 9) + 1,\n      num2: Math.floor(Math.random() * 9) + 1,\n      result: -1,\n    }\n  }\n  updateResult = (e) => {\n    this.setState({result: e.target.value})\n  };\n  updateTask = () => {\n    this.setState({num1: Math.floor(Math.random() * 9) + 1, num2: Math.floor(Math.random() * 9) + 1});\n    document.getElementById('result').value = '';\n    document.getElementById('result').focus();\n  };\n  checkResult = () => {\n    if (this.state.num1 * this.state.num2 === parseInt(this.state.result)) {\n      this.setState({score: this.state.score + 1});\n      this.updateTask()\n    } else {\n      document.getElementById('result').focus();\n      if (this.state.score > 0) {\n        this.setState({score: this.state.score - 0.5});\n      }\n    }\n  };\n  enterListener = (e) => {\n    if (e.keyCode === 13) {\n      document.getElementById('check').click();\n    }\n  };\n  render() {\n    return(\n        <div>\n          <h3>Счёт: {this.state.score}</h3>\n          <h4>{this.state.num1} × {this.state.num2}</h4>\n          <label>Результат: <input onKeyUp={this.enterListener} id={'result'} onChange={this.updateResult}/></label>\n          <br/>\n          <button id={'check'} onClick={this.checkResult}>Проверить</button>\n        </div>\n    );\n  }\n}\n\nclass DivRemainder extends Component{\n  constructor(props) {\n    super(props);\n    let first = Math.floor(Math.random() * 500);\n    let second = Math.floor(Math.random() * 100) + 1;\n    while (second > first) {\n      second = Math.floor(Math.random() * 99) + 1;\n    }\n    this.state = {\n      score: 0,\n      num1: first,\n      num2: second,\n      result: -1,\n      remainder: -1,\n    }\n  }\n  updateResult = (e) => {\n    this.setState({result: e.target.value});\n  };\n  updateRemainder = (e) => {\n    this.setState({remainder: e.target.value});\n  };\n  updateTask = () => {\n    let first = Math.floor(Math.random() * 500);\n    let second = Math.floor(Math.random() * 100) + 1;\n    while (second > first) {\n      second = Math.floor(Math.random() * 99) + 1;\n    }\n    this.setState({num1: first, num2: second});\n    document.getElementById('result').value = '';\n    document.getElementById('remainder').value = '';\n    document.getElementById('result').focus();\n  };\n  checkResult = () => {\n    if (((this.state.num1 - this.state.remainder) % this.state.num2 === 0) && ((this.state.num1 - this.state.remainder) / this.state.num2 === parseInt(this.state.result))) {\n      this.setState({score: this.state.score + 1});\n      this.updateTask();\n    } else {\n      document.getElementById('result').focus();\n      if (this.state.score > 0) {\n        this.setState({score: this.state.score - 0.5});\n      }\n    }\n  };\n  enterListener = (e) => {\n    if (e.keyCode === 13) {\n      document.getElementById('check').click();\n    }\n  };\n  render() {\n    return(\n        <div>\n          <h3>Счёт: {this.state.score}</h3>\n          <h4>{this.state.num1} ÷ {this.state.num2}</h4>\n          <label>Результат: <input id={'result'} onChange={this.updateResult}/></label>\n          <br/>\n          <label>Остаток: <input onKeyUp={this.enterListener} id={'remainder'} onChange={this.updateRemainder}/></label>\n          <br/>\n          <button id={'check'} onClick={this.checkResult}>Проверить</button>\n        </div>\n    );\n  }\n}\n\nclass AddSub extends Component {\n  constructor(props) {\n    super(props);\n    let add = Math.random() >= 0.5;\n    let first = Math.floor(Math.random() * 900) + 100;\n    let second = Math.floor(Math.random() * 900) + 100;\n    if (!add) {\n      while (second > first) {\n        second = Math.floor(Math.random() * 900) + 100;\n      }\n    }\n    this.state = {\n      score: 0,\n      num1: first,\n      num2: second,\n      result: -1,\n      addition: add,\n    }\n  }\n  getSign = () => {\n    if (this.state.addition) {\n      return '+';\n    } else {\n      return '-';\n    }\n  };\n  updateResult = (e) => {\n    this.setState({result: e.target.value})\n  };\n  enterListener = (e) => {\n    if (e.keyCode === 13) {\n      document.getElementById('check').click();\n    }\n  };\n  updateTask = () => {\n    let add = Math.random() >= 0.5;\n    let first = Math.floor(Math.random() * 900) + 100;\n    let second = Math.floor(Math.random() * 900) + 100;\n    if (!add) {\n      while (second > first) {\n        second = Math.floor(Math.random() * 900) + 100;\n      }\n    }\n    this.setState({num1: first, num2: second, addition: add});\n  };\n  checkResult = () => {\n    if (this.state.addition) {\n      if (this.state.num1 + this.state.num2 === parseInt(this.state.result)) {\n        this.setState({score: this.state.score + 1});\n        this.updateTask()\n      } else {\n        document.getElementById('result').focus();\n        if (this.state.score > 0) {\n          this.setState({score: this.state.score - 0.5});\n        }\n      }\n    } else {\n      if (this.state.num1 - this.state.num2 === parseInt(this.state.result)) {\n        this.setState({score: this.state.score + 1});\n        this.updateTask()\n      } else {\n        document.getElementById('result').focus();\n        if (this.state.score > 0) {\n          this.setState({score: this.state.score - 0.5});\n        }\n      }\n    }\n  };\n  render() {\n    return(\n        <div>\n          <h3>Счёт: {this.state.score}</h3>\n          <h4>{this.state.num1} {this.getSign()} {this.state.num2}</h4>\n          <label>Результат: <input onKeyUp={this.enterListener} id={'result'} onChange={this.updateResult}/></label>\n          <br/>\n          <button id={'check'} onClick={this.checkResult}>Проверить</button>\n        </div>\n    );\n  }\n}\n\nclass ParentView extends Component{\n  constructor(props) {\n    super(props);\n    this.tasks = {'simp-mult': <SimpMult/>, 'mult': <Mult/>, 'add-sub': <AddSub/>, 'div-remainder': <DivRemainder/>};\n    this.state = {\n      currentTask: this.tasks['simp-mult'],\n    }\n  }\n  changeTask = (e) => {\n    this.setState({currentTask: this.tasks[e.target.value]});\n  };\n  render() {\n    return (\n        <div>\n          <select onChange={this.changeTask}>\n            <option value={'simp-mult'}>Таблица умножения</option>\n            <option value={'mult'}>Умножение в столбик</option>\n            <option value={'add-sub'}>Сложение/Вычетание</option>\n            <option value={'div-remainder'}>Деление с остатком</option>\n          </select>\n          {this.state.currentTask}\n        </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className='App'>\n      <ParentView/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}